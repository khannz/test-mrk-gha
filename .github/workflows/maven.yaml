# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  workflow_call:

#  push:
#    branches:
#      - master
#      - develop
#      - 'feature/*'
#      - 'hotfix/*'
#      - 'bugfix/*'
#      - 'release/*'
#  pull_request:
#    branches:
#      - master
#      - develop
#      - 'feature/*'
#      - 'hotfix/*'
#      - 'bugfix/*'
#      - 'release/*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v4.1.1

    - name: Set Version Dynamically
      id: set-version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
        if [[ "${{ github.ref }}" == refs/heads/release/* ]]; then
          VERSION="$VERSION"
        elif [[ "${{ github.ref }}" == refs/heads/feature/* ]]; then
          VERSION="$VERSION-FB-$(date +%Y%m%d.%H%M%S)-${{ github.run_number }}"
        elif [[ "${{ github.ref }}" == refs/heads/bugfix/* ]]; then
          VERSION="$VERSION-FB-$(date +%Y%m%d.%H%M%S)-${{ github.run_number }}"
        elif [[ "${{ github.ref }}" == refs/heads/hotfix/* ]]; then
          VERSION="$VERSION-HOTFIX-${{ github.run_number }}"
        else
          VERSION="$VERSION-$(date +%Y%m%d.%H%M%S)-${{ github.run_number }}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Publish Package
      run: |
        env
        mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
